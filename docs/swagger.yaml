basePath: /
definitions:
  models.Image:
    properties:
      imageDateTime:
        type: string
      imageDay:
        type: integer
      imageDirLocation:
        type: string
      imageFileName:
        type: string
      imageHeight:
        type: integer
      imageID:
        type: integer
      imageLat:
        type: string
      imageLon:
        type: string
      imageMonth:
        type: integer
      imageSize:
        type: string
      imageType:
        type: string
      imageWidth:
        type: integer
      imageYear:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: tseitzinger@gmail.com
    name: Tim Seitzinger
  description: An Image API in Go using Gin framework.
  title: Images API
  version: "1.0"
paths:
  /images:
    get:
      description: Responds with the list of all images as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Image'
            type: array
      summary: Get Images array
      tags:
      - images
    post:
      description: Takes a image JSON and store in DB. Return saved JSON.
      parameters:
      - description: Image Directory
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/models.Image'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      summary: Store a new image
      tags:
      - images
  /images/{image_id}:
    delete:
      description: Delete the image whose ID value matches the image_id.
      parameters:
      - description: delete image by image_id
        in: path
        name: image_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      summary: Delete single image by image_id
      tags:
      - images
    get:
      description: Returns the image whose ID value matches the ImageID.
      parameters:
      - description: search image by ImageID
        in: path
        name: image_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      summary: Get single image by ImageID
      tags:
      - images
    patch:
      description: Updates the image whose ID value matches the image_id.
      parameters:
      - description: update image by image_id
        in: path
        name: image_id
        required: true
        type: integer
      - description: Image JSON
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/models.Image'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      summary: Update single image by image_id
      tags:
      - images
swagger: "2.0"
